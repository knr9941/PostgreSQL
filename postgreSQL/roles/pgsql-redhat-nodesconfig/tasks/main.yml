  - name: install postgres repo
    yum:
      name: "{{pgSql_repo}}" 
      state: present
  - name: Install Postgresql latest version
    yum:
      update_cache: yes
      name: "{{ item }}"
      state: present
    loop:
      - postgresql{{ postgresql_version |replace('.', '') }}
      - postgresql{{ postgresql_version |replace('.', '') }}-server
      - postgresql{{ postgresql_version |replace('.', '') }}-contrib
      - postgresql{{ postgresql_version |replace('.', '') }}-libs
      - python3
      - python3-pip
      - python-psycopg2

  - name: Initialize database
    shell: '{{postgresql_exec_dir | trim }}/{{postgresql_initdb_name | trim }}-setup initdb'
    when: postgresql_version <= 9.6
    ignore_errors: yes


  - name: Initialize database
    shell: '"{{postgresql_exec_dir}}"/postgresql-"{{postgresql_version}}"-setup initdb'
    when: postgresql_version >= 10
    ignore_errors: yes


  - name: Restart service postgresql, in all cases
    systemd:
      name: "{{postgresql_service_name}}"
      state: started
      enabled: yes

  - name: Stop PostgreSQL slave server 
    systemd:
      name: "{{postgresql_service_name}}"
      state: stopped
  - name: Remove old files foo
    file: path={{postgresql_data_backup_dir}} state=absent
  - name: checking files
    stat: 
      path: "{{postgresql_data_dir}}"
    register: foo_stat

  - name: Move foo to bar
    shell: 'mv  "{{postgresql_data_dir}}" "{{postgresql_data_backup_dir}}"'
    when: foo_stat.stat.exists
    ignore_errors: yes

  - name: Create data directory slave 
    file:
      path: "{{postgresql_data_dir}}"
      mode: '0700'
      owner: "{{ postgresql_admin_user }}"
      group: "{{ postgresql_admin_user }}"
      state: directory
  
  - name: Backup initial data from master
    become_user: root
    shell: su - postgres -c 'PGPASSWORD={{postgresql_streaming_user.pass}} pg_basebackup -h {{ masterIPS }} -U {{postgresql_streaming_user.name}} -D {{postgresql_data_dir}} -P'

  - name: Update postgresql.conf file 
    template:
      src: postgresql.conf
      dest: "{{ postgresql_conf_dir }}/postgresql.conf"
      owner: "{{ postgresql_admin_user }}"
      group: "{{ postgresql_admin_user }}"
      mode: '0600'
  - name: Create recovery.conf
    template:
      src: recovery.conf
      dest: "{{ postgresql_conf_dir }}/recovery.conf"
      owner: "{{ postgresql_admin_user }}"
      group: "{{ postgresql_admin_user }}"
      mode: '0600'
  - name: Start PostgreSQL server
    systemd:
      name: "{{postgresql_service_name}}"
      state: restarted
