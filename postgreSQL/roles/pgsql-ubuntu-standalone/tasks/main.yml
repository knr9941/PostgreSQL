  - name: Add an Apt signing key, Is at the URL
    apt_key:
      url: "{{ pgsql_key }}"
      state: present
      
  - name: Add ubuntu (apt) repository into sources list using specified pgdg.list.
    apt_repository:
      repo: "{{pgSql_repo}}"
      state: present
      filename: pgdg
      update_cache: yes
      
  - name: Upgrade all packages to the latest version
    apt:
      name: "*"
      state: latest
      update_cache: yes
      
  - name: Install Postgresql latest version
    apt:
      update_cache: yes
      name: "{{ item }}"
      allow_unauthenticated: yes
      state: present
    loop:
      - postgresql-{{ postgresql_version }}
      - postgresql-contrib-{{ postgresql_version }}
      - python3
      - python3-pip
      - libpq-dev
      - python3-psycopg2

  - name: Restart and Enableing service postgresql, in all cases
    service:
      name: postgresql
      enabled: yes
    
  - name: create DB
    become: yes
    become_user: "{{postgresql_admin_user}}"
    postgresql_db: 
      name: "{{postgresql_database_name}}"

  - name: Creating postgres user for "{{postgresql_database_name}}"
    become: yes
    become_user: postgres
    postgresql_user:
      db: "{{postgresql_database_name}}"
      name: "{{postgresql_database_user.name}}"
      password: "{{postgresql_database_user.pass}}"
      role_attr_flags: "{{role_attr_user_flags}}"
      priv: "{{user_privilages}}" 

  - name: Ensure we have access from the new user
    become: yes
    become_user: "{{postgresql_admin_user}}"
    postgresql_privs:
      db: "{{postgresql_database_name}}"
      role: "{{postgresql_database_user.name}}"
      objs: ALL_IN_SCHEMA
      privs: "{{user_privilages}}"

  - name: crating table in DataBase "{{postgresql_database_name}}"
    become: yes
    become_user: "{{postgresql_admin_user}}"
    postgresql_table:
      db: "{{postgresql_database_name}}"
      name: "{{DB_table_name}}"
      columns: "{{DB_table_columns}}" 
